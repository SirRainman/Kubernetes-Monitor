apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      # securityContext:
      #     runAsUser: 472
      #     fsGroup: 472
      containers:
      - image: grafana/grafana:5.0.0
        name: grafana-core
        imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_SECURITY_COOKIE_SECURE
            value: "true"
          - name: GF_SECURITY_COOKIE_SAMESITE
            value: "none"
          - name: GF_SECURITY_ALLOW_EMBEDDING
            value: "true"
          # - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          #   value: Admin
          # does not really work, because of template variables in exported dashboards:
          # - name: GF_DASHBOARDS_JSON_ENABLED
          #   value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          # initialDelaySeconds: 30
          # timeoutSeconds: 1
        # volumeMounts:
        # - name: grafana-persistent-storage
        #   mountPath: /var
        volumeMounts:
        - mountPath: /var/lib/grafana # pod下的目录
          name: storage
      # volumes:
      # - name: grafana-persistent-storage
      #   emptyDir: {}
      volumes:
      - name: storage
        hostPath:
          path: /grafana_data/  #宿主机path
          type: DirectoryOrCreate
